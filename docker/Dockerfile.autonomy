ARG BASE_IMAGE=tharp789/hummingbird_demo:base-36.4.0
FROM ${BASE_IMAGE}

RUN apt-get install ros-humble-rosbag2-storage-mcap -y

# MACVO Dependencies -----------------------------------------------------------------------------------------------------
RUN pip3 install --no-cache-dir --ignore-installed \
  empy \
  future \
  lxml \
  matplotlib==3.8.4 \
  numpy==1.24.0 \
  pkgconfig \
  psutil \
  pygments \
  wheel \
  pymavlink \
  pyyaml \
  requests \
  setuptools \
  six \
  toml \
  scipy \
  torch \
  torchvision \
  pypose \
  rich \
  tqdm \
  pillow \ 
  flow_vis \
  h5py \
  evo \
  tabulate \
  einops \
  timm==0.9.12 \
  rerun-sdk==0.22.0 \
  yacs \
  wandb

WORKDIR /root/model_weights
RUN wget -r "https://github.com/MAC-VO/MAC-VO/releases/download/model/MACVO_FrontendCov.pth" && \ 
    mv /root/model_weights/github.com/MAC-VO/MAC-VO/releases/download/model/MACVO_FrontendCov.pth /root/model_weights/MACVO_FrontendCov.pth && \
    rm -rf /root/model_weights/github.com

RUN wget -r "https://github.com/MAC-VO/MAC-VO/releases/download/model/MACVO_posenet.pkl" && \ 
    mv /root/model_weights/github.com/MAC-VO/MAC-VO/releases/download/model/MACVO_posenet.pkl /root/model_weights/MACVO_posenet.pkl && \
    rm -rf /root/model_weights/github.com

# VINS_Fusion Dependencies -----------------------------------------------------------------------------------------------------
WORKDIR /root/vins_dependencies
RUN git clone -b humble https://github.com/ros-perception/vision_opencv.git
RUN apt-get update && apt-get install -y \
  ros-humble-vision-opencv \
  ros-humble-image-geometry \
  ros-humble-image-transport-plugins \
  ros-humble-image-transport-plugins-qt-plugins \
  ros-humble-image-pipeline \
  ros-humble-image-transport \
  ros-humble-cv-bridge \
  ros-humble-camera-info-manager \
  ros-humble-camera-info-manager-py
RUN apt-get install -y wget unzip cmake \
    libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev libboost-python-dev libboost-dev libboost-filesystem-dev libboost-program-options-dev

ARG $WORKERS_BUILD_DEPS=4
RUN git clone https://github.com/opencv/opencv.git -b 4.8.0 --depth 1
RUN git clone https://github.com/opencv/opencv_contrib.git -b 4.8.0 --depth 1
RUN cd opencv && mkdir build && cd build && \
cmake -D CMAKE_BUILD_TYPE=RELEASE -D INSTALL_C_EXAMPLES=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D OPENCV_GENERATE_PKGCONFIG=ON -D BUILD_EXAMPLES=OFF \
-D OPENCV_ENABLE_NONFREE=ON \
-D WITH_IPP=OFF \
-D BUILD_TESTS=OFF \
-D BUILD_PERF_TESTS=OFF \
-D BUILD_opencv_adas=OFF \
-D BUILD_opencv_bgsegm=OFF \
-D BUILD_opencv_bioinspired=OFF \
-D BUILD_opencv_ccalib=OFF \
-D BUILD_opencv_datasets=ON \
-D BUILD_opencv_datasettools=OFF \
-D BUILD_opencv_face=OFF \
-D BUILD_opencv_latentsvm=OFF \
-D BUILD_opencv_line_descriptor=OFF \
-D BUILD_opencv_matlab=OFF \
-D BUILD_opencv_optflow=ON \
-D BUILD_opencv_reg=OFF \
-D BUILD_opencv_saliency=OFF \
-D BUILD_opencv_surface_matching=OFF \
-D BUILD_opencv_text=OFF \
-D BUILD_opencv_tracking=ON \
-D BUILD_opencv_xobjdetect=OFF \
-D BUILD_opencv_xphoto=OFF \
-D BUILD_opencv_stereo=OFF \
-D BUILD_opencv_hdf=OFF \
-D BUILD_opencv_cvv=OFF \
-D BUILD_opencv_fuzzy=OFF \
-D BUILD_opencv_dnn=OFF \
-D BUILD_opencv_dnn_objdetect=OFF \
-D BUILD_opencv_dnn_superres=OFF \
-D BUILD_opencv_dpm=OFF \
-D BUILD_opencv_quality=OFF \
-D BUILD_opencv_rapid=OFF \
-D BUILD_opencv_rgbd=OFF \
-D BUILD_opencv_sfm=OFF \
-D BUILD_opencv_shape=ON \
-D BUILD_opencv_stitching=OFF \
-D BUILD_opencv_structured_light=OFF \
-D BUILD_opencv_alphamat=OFF \
-D BUILD_opencv_aruco=OFF \
-D BUILD_opencv_phase_unwrapping=OFF \
-D BUILD_opencv_photo=OFF \
-D BUILD_opencv_gapi=OFF \
-D BUILD_opencv_video=ON \
-D BUILD_opencv_ml=OFF \
-D BUILD_opencv_python2=OFF \
-D WITH_GSTREAMER=OFF \
-D ENABLE_PRECOMPILED_HEADERS=OFF \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules/ ../ && \
make -j $WORKERS_BUILD_DEPS && make install && ldconfig

WORKDIR /root/vins_dependencies
RUN wget -O eigen-3.4.0.zip https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip && \
unzip eigen-3.4.0.zip && \
cd eigen-3.4.0 && mkdir build && cd build && \
cmake ../ && sudo make install -j $WORKERS_BUILD_DEPS

WORKDIR /root/vins_dependencies
RUN wget http://ceres-solver.org/ceres-solver-2.1.0.tar.gz && \
tar zxf ceres-solver-2.1.0.tar.gz && \
cd ceres-solver-2.1.0 && mkdir build && cd build && \
cmake -DEXPORT_BUILD_DIR=ON -DCMAKE_INSTALL_PREFIX=/usr/local ../ && \
make -j $WORKERS_BUILD_DEPS && make test -j $WORKERS_BUILD_DEPS && \
make install -j $WORKERS_BUILD_DEPS

# General ROS2 Dependencies -----------------------------------------------------------------------------------------------------
WORKDIR /root/ros2_ws/
RUN echo "source /opt/ros/$ROS_DISTRO/install/setup.bash" >> ~/.bashrc
RUN echo "source /root/ros2_ws/install/local_setup.bash" >> ~/.bashrc

RUN pip uninstall matplotlib -y