ARG BASE_IMAGE=tharp789/hummingbird_demo:base-36.4.0
FROM ${BASE_IMAGE}

RUN apt-get update && apt-get install -y \
libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev libboost-python-dev libboost-dev libboost-filesystem-dev \
libboost-program-options-dev libeigen3-dev \
geographiclib-tools libgeographic-dev python3-vcstool python3-rosinstall-generator python3-osrf-pycommon

# VINS_Fusion Dependencies -----------------------------------------------------------------------------------------------------
WORKDIR /tmp/
RUN wget -O eigen-3.4.0.zip https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip && \
unzip eigen-3.4.0.zip && \
cd eigen-3.4.0 && mkdir build && cd build && \
cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS_RELEASE="-O3 -march=native -ffast-math" -Wno-dev && sudo make install -j $(nproc)

WORKDIR /tmp/
RUN wget http://ceres-solver.org/ceres-solver-2.1.0.tar.gz && \
tar zxf ceres-solver-2.1.0.tar.gz && \
mkdir ceres-bin && cd ceres-bin && \
cmake ../ceres-solver-2.1.0 -DCUDA=ON -DEXPORT_BUILD_DIR=ON -DCMAKE_INSTALL_PREFIX=/usr/local \ 
-DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS_RELEASE="-O3 -march=native -ffast-math" -Wno-dev && \
make -j $(nproc) && \
make install -j $(nproc)

RUN apt-get update && apt-get install -y libyaml-cpp-dev

WORKDIR /root/dependencies_ws/src/
RUN git clone https://github.com/JanekDev/VINS-Fusion-ROS2-humble-arm.git vins_fusion
RUN mv vins_fusion/global_fusion vins_fusion/loop_fusion vins_fusion/camera_models . && \
rm -rf vins_fusion/

# MAVROS
WORKDIR /root/dependencies_ws/
RUN rosinstall_generator --format repos mavlink | tee /tmp/mavlink.repos && \
rosinstall_generator --format repos --upstream mavros | tee -a /tmp/mavros.repos && \
vcs import src < /tmp/mavlink.repos && vcs import src < /tmp/mavros.repos

# MAVROS Dependencies
WORKDIR /root/dependencies_ws/src/
RUN git clone https://github.com/ros/eigen_stl_containers.git -b ros2
RUN git clone https://github.com/ros-geographic-info/geographic_info.git -b ros2
RUN git clone https://github.com/ros/diagnostics.git -b ros2

# MCAP
WORKDIR /root/dependencies_ws/src/
RUN git clone https://github.com/ros2/rosbag2.git -b humble && \
    cp -r rosbag2/rosbag2_storage_mcap/ . && \
    rm -rf rosbag2

WORKDIR /root/dependencies_ws
RUN /bin/bash -c "source ~/.bash_profile && source /opt/ros/humble/install/setup.bash && \
colcon build --parallel-workers $(nproc) --symlink-install \
  --event-handlers console_direct+ --base-paths src \
  --cmake-args -Wno-dev ' -DCMAKE_BUILD_TYPE=Release' \
  '-DCMAKE_CXX_FLAGS_RELEASE=-O3 -march=native -ffast-math' \
  ' -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs' \
  ' -DCMAKE_CXX_FLAGS="-Wl,--allow-shlib-undefined"' \
  ' --no-warn-unused-cli' "
  
# General ROS2 Dependencies -----------------------------------------------------------------------------------------------------
WORKDIR /root/ros2_ws/
RUN pip uninstall matplotlib -y
RUN /root/dependencies_ws/src/mavros/mavros/scripts/install_geographiclib_datasets.sh

RUN pip3 install \
  matplotlib \
  numpy==1.24.3 \
  scipy \
  wheel \
  pymavlink \
  pyyaml \
  pybind11

COPY autonomy_entrypoint.sh /root/entrypoint.sh
RUN chmod +x /root/entrypoint.sh

RUN echo "alias sws='source ~/.bash_profile && source /root/dependencies_ws/install/setup.bash && source /root/ros2_ws/install/setup.bash'" >> ~/.bashrc && \
    echo "alias bwt='source ~/.bash_profile && source /root/dependencies_ws/install/setup.bash && colcon build --symlink-install --packages-select wire_tracking'" >> ~/.bashrc && \
    echo "alias bbr='source ~/.bash_profile && source /root/dependencies_ws/install/setup.bash && colcon build --symlink-install --packages-select bag_recorder'" >> ~/.bashrc && \
    echo "alias bws='source ~/.bash_profile && source /root/dependencies_ws/install/setup.bash && colcon build --symlink-install'" >> ~/.bashrc && \
    echo "alias start_control='source ~/.bash_profile && source /root/dependencies_ws/install/setup.bash && source /root/ros2_ws/install/setup.bash && ros2 launch control_test control_test.launch.xml'" >> ~/.bashrc
