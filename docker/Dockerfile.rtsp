ARG L4T_VERSION=l4t-r36.4.0
ARG IMAGE_NAME=dustynv/ros:humble-desktop-${L4T_VERSION}

FROM ${IMAGE_NAME}

ENV DEBIAN_FRONTEND noninteractive

ARG ROS2_DIST=humble  

ENV ROS_DISTRO ${ROS2_DIST}

# Disable apt-get warnings
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 42D5A192B819C5DA || true && \
  apt-get update || true && apt-get install -y --no-install-recommends apt-utils dialog && \
  rm -rf /var/lib/apt/lists/*

ENV TZ=Europe/Paris

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \ 
  apt-get update && \
  apt-get install --yes lsb-release wget less udev sudo build-essential cmake python3 python3-dev python3-pip python3-wheel git jq libpq-dev zstd usbutils vim && \    
  rm -rf /var/lib/apt/lists/*

RUN echo "# R${L4T_MAJOR} (release), REVISION: ${L4T_MINOR}" > /etc/nv_tegra_release && \
  apt-get update -y || true && \
  apt-get install -y --no-install-recommends zstd wget less cmake curl gnupg2 \
  build-essential python3 python3-pip python3-dev python3-setuptools libusb-1.0-0-dev -y && \
  pip install protobuf

RUN apt-get remove --purge '*opencv*' -y && apt-get autoremove -y && apt-get clean -y && apt-get install -y python3-opencv
RUN apt-get update -y && apt-get install -y -f libgstreamer-plugins-base1.0-dev \
libgstreamer-plugins-good1.0-dev libgstreamer-plugins-bad1.0-dev libgstrtspserver-1.0-dev \
gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad

#RUN apt-get update -y && apt-get remove -y libopencv opencv-dev opencv-libs && apt-get install -y -f libgstreamer-plugins-base1.0-dev \
#libgstreamer-plugins-good1.0-dev libgstreamer-plugins-bad1.0-dev libgstrtspserver-1.0-dev \
#gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad

# WORKDIR /root/ros2_ws/src/
# COPY image2rtsp/ ./

# WORKDIR /root/ros2_ws
# RUN apt-get update -y || true && rosdep update && \
#   rosdep install --from-paths src/ --ignore-src -r -y && \
#   rm -rf /var/lib/apt/lists/*

#   RUN /bin/bash -c "source /opt/ros/$ROS_DISTRO/install/setup.bash && \
#   colcon build --parallel-workers $(nproc) --symlink-install \
#   --event-handlers console_direct+ --base-paths src \
#   --cmake-args ' -DCMAKE_BUILD_TYPE=Release' \
#   ' -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs' \
#   ' -DCMAKE_CXX_FLAGS="-Wl,--allow-shlib-undefined"' \
#   ' --no-warn-unused-cli' "

WORKDIR /root/ros2_ws
RUN echo "source /opt/ros/$ROS_DISTRO/install/setup.bash" >> ~/.bashrc
RUN echo "source /root/ros2_ws/install/local_setup.bash" >> ~/.bashrc
